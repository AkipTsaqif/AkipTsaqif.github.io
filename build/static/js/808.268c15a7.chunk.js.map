{"version":3,"file":"static/js/808.268c15a7.chunk.js","mappings":"mMACA,EAAuB,wB,kBCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAf,WACE,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAD,CAAMH,UAAU,MAAMI,GAAE,qBAAgBL,EAAMM,IAA9C,iCCXN,EAAuB,wBAAvB,EAAyD,2BCgDzD,EAlCkB,SAACN,GACjB,IAXkBO,EAAQC,EAWpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAGXC,EAAwC,QAD1B,IAAIC,gBAAgBH,EAASI,QACnBC,IAAI,QAE5BC,GAjBYV,EAiBcP,EAAMO,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,MAoBxC,OACE,UAAC,EAAAe,SAAD,YACE,gBAAKpB,UAAWC,EAAhB,UACE,oBAAQoB,QATe,WAG3Bb,EAAQc,KAAK,iBAAmBV,EAAY,OAAS,SAMjD,4BAAuDA,EAAY,UAAY,eAEjF,eAAIZ,UAAWC,EAAf,SACGe,EAAaO,KAAI,SAACC,GAAD,OAChB,SAAC,EAAD,CAEEnB,GAAImB,EAAMnB,GACVF,OAAQqB,EAAMrB,OACdD,KAAMsB,EAAMtB,MAHPsB,EAAMnB,a,2BCrCvB,EAA2B,gCCa3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAhB,WACE,iDACA,SAAC,KAAD,CAAMD,UAAU,MAAMI,GAAG,oBAAzB,mCCuCN,EAhCkB,WACd,OAA0DqB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAxEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MAMjD,OAJAC,EAAAA,EAAAA,YAAU,WACNL,MACD,CAACA,IAEW,YAAXC,GAEI,gBAAK5B,UAAU,WAAf,UACI,SAACiC,EAAA,EAAD,MAKRF,GAEI,gBAAK/B,UAAU,mBAAf,SAAmC+B,IAI5B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAOzD,SAAC,EAAD,CAAW5B,OAAQuB,KALf,SAAC,EAAD","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__rpHNO\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/id/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__h2mdA\",\"sorting\":\"QuoteList_sorting__6YJ15\"};","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAsc = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortAsc)\n\n  const changeSortingHandler = () => {\n    // push stringnya bisa diganti jadi\n      // ${location.pathname}?sort=\n    history.push('/quotes?sort=' + (isSortAsc ? 'desc' : 'asc'))\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Urutkan secara {isSortAsc ? 'menurun' : 'menaik'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__mn2mU\"};","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>Daftar quote kosong!</p>\n      <Link className='btn' to='/quotes/new-quote'>\n        Tambah quote baru\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../components/quotes/QuoteList'\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport { useEffect } from 'react';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\n// const DUMMY_QUOTES = [\r\n//     { id: 1, text: 'Halo Dunia', author: 'Saya' },\r\n//     { id: 2, text: 'Melihat Senja', author: 'Saya' },\r\n//     { id: 3, text: 'Dalam Naungan Cinta', author: 'Saya' },\r\n//     { id: 4, text: 'Bermuka Dua', author: 'Saya' },\r\n// ]\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className='centered focused'>{error}</div>\r\n        )\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return (\r\n            <NoQuotesFound />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={loadedQuotes} />\r\n    );\r\n}\r\n\r\nexport default AllQuotes;"],"names":["props","className","classes","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortAsc","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}