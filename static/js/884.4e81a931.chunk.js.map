{"version":3,"file":"static/js/884.4e81a931.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,SAA+BF,EAAMG,Y,SCF9C,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCyDnI,EApDkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrB,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OACE,iCACE,SAAC,KAAD,CAAQC,KAAMF,EAAWG,QAAS,SAACC,GAAD,MAAc,oCAChD,SAAC,EAAD,WACE,kBAAMC,QAZe,WACzBJ,GAAa,IAW0BR,UAAWC,EAAcY,SAvBlE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe5C,UACGpB,EAAMwB,YACL,gBAAKvB,UAAWC,EAAhB,UACE,SAACuB,EAAA,EAAD,OAIJ,iBAAKxB,UAAWC,EAAhB,WACE,kBAAOwB,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAEtC,iBAAKH,UAAWC,EAAhB,WACE,kBAAOwB,QAAQ,OAAf,mBACA,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,QAEpC,gBAAKL,UAAWC,EAAhB,UACE,mBAAQ6B,QAxBY,WAC5BtB,GAAa,IAuBmCR,UAAU,MAAlD,kC,kBCzBZ,EAnBiB,WACb,IAAM+B,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,QAErBC,EAAAA,EAAAA,YAAU,WACS,cAAXD,GACAL,EAAQO,KAAK,aAElB,CAACF,EAAQL,IAMZ,OACI,SAAC,EAAD,CAAWR,UAAsB,YAAXa,EAAsBhB,WALxB,SAACmB,GACrBJ,EAAYI","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__vKiqn\"};","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__htQOV\",\"loading\":\"QuoteForm_loading__yACR-\",\"control\":\"QuoteForm_control__L1qcQ\",\"actions\":\"QuoteForm_actions__vf3z2\"};","import { useRef, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\n\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const formFocusedHandler = () => {\r\n    setIsFocused(true);\r\n  }\r\n\r\n  const finishEnteringHandler = () => {\r\n    setIsFocused(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Prompt when={isFocused} message={(location) => 'Ingin meninggalkan laman ini?'} />\r\n      <Card>\r\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor='author'>Author</label>\r\n            <input type='text' id='author' ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor='text'>Text</label>\r\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import QuoteForm from '../components/quotes/QuoteForm'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\nimport { useEffect } from 'react'\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = (quote) => {\r\n        sendRequest(quote)\r\n    }\r\n\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n    );\r\n}\r\n\r\nexport default NewQuote;"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","isFocused","setIsFocused","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quote"],"sourceRoot":""}